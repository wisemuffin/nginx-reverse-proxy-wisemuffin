user www-data;

worker_processes auto;

events {
  worker_connections 1024;
}

http {

  include mime.types;



  # Redirect all traffic to HTTPS
  server {
    listen 80;
    server_name wisemuffin.com;
    return 301 https://$host$request_uri;
  }


  server {
    listen 443 ssl http2;
    server_name wisemuffin.com;

    root /app;

    index index.html;

    ssl_certificate /etc/letsencrypt/live/wisemuffin.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/wisemuffin.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;

    # Enable DH Params
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Enable HSTS
    add_header Strict-Transport-Security "max-age=31536000" always;


    proxy_set_header Host $http_host;



#    location / {
#      try_files $uri $uri/ =404;
#    }

    location /grafana/ {
        proxy_pass http://138.68.5.216:3000/;
        proxy_set_header   Host $host;
    }


    location /f/ {
        proxy_pass http://138.68.5.216:1685/;
        proxy_set_header   Host $host;
    }



    location /police {
        rewrite ^/police(.*) /$1 break;
        proxy_pass http://138.68.5.216:8000;
    }

    location /nhs {
        rewrite ^/nhs(.*) /$1 break;
        proxy_pass http://138.68.5.216:8001;
    }

    location /ghost/ {
        rewrite ^/ghost(.*) /$1 break;
        proxy_pass http://138.68.5.216:8083;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
    }

    location /matomo/ {
        rewrite ^/matomo(.*) /$1 break;
        proxy_set_header X-Forwarded-Uri /matomo/;
        proxy_pass http://138.68.5.216:8080;

        #proxy_buffering                       off;
        #proxy_set_header Host                 $http_host;
        #proxy_set_header X-Real-IP            $remote_addr;
        #proxy_set_header X-Forwarded-For      $proxy_add_x_forwarded_for;
        #proxy_set_header X-Forwarded-Proto    $scheme;
    }

#    location / {
#        return 200 " hello from nginx\n";
#    }
  }


}
